{"ast":null,"code":"var _jsxFileName = \"/Users/yash/Desktop/face-recognition-2/src/components/pages/RecognitionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport WebcamCapture from '../common/WebcamCapture';\nimport UploadSection from 'src/components/common/UploadSection.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecognitionPage = () => {\n  _s();\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [matchedImage, setMatchedImage] = useState(null);\n  const [personDetails, setPersonDetails] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recognition-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"capture-section\",\n      children: capturedImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: capturedImage,\n        alt: \"Captured\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(WebcamCapture, {\n          onCapture: setCapturedImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(UploadSection, {\n          onUpload: setCapturedImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-section\",\n      children: [matchedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: matchedImage,\n        alt: \"Matched\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 34\n      }, this), personDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Name: \", personDetails.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Nationality: \", personDetails.nationality]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Gender: \", personDetails.gender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), matchedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/checkmark.png\",\n        alt: \"Match Found\",\n        className: \"checkmark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_s(RecognitionPage, \"ESPGiBMGJ6tKYGDJqRsYLqCjJOU=\");\n_c = RecognitionPage;\nexport default RecognitionPage;\nvar _c;\n$RefreshReg$(_c, \"RecognitionPage\");","map":{"version":3,"names":["React","useState","WebcamCapture","UploadSection","jsxDEV","_jsxDEV","Fragment","_Fragment","RecognitionPage","_s","capturedImage","setCapturedImage","matchedImage","setMatchedImage","personDetails","setPersonDetails","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onCapture","onUpload","name","nationality","gender","_c","$RefreshReg$"],"sources":["/Users/yash/Desktop/face-recognition-2/src/components/pages/RecognitionPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport WebcamCapture from '../common/WebcamCapture';\nimport UploadSection from 'src/components/common/UploadSection.js';\n\nconst RecognitionPage = () => {\n    const [capturedImage, setCapturedImage] = useState(null);\n    const [matchedImage, setMatchedImage] = useState(null);\n    const [personDetails, setPersonDetails] = useState(null);\n\n    return (\n        <div className=\"recognition-page\">\n            <div className=\"capture-section\">\n                {capturedImage ? (\n                    <img src={capturedImage} alt=\"Captured\" />\n                ) : (\n                    <>\n                        <WebcamCapture onCapture={setCapturedImage} />\n                        <UploadSection onUpload={setCapturedImage} />\n                    </>\n                )}\n            </div>\n\n            <div className=\"divider\" />\n\n            <div className=\"match-section\">\n                {matchedImage && <img src={matchedImage} alt=\"Matched\" />}\n                {personDetails && (\n                    <div className=\"details\">\n                        <div>Name: {personDetails.name}</div>\n                        <div>Nationality: {personDetails.nationality}</div>\n                        <div>Gender: {personDetails.gender}</div>\n                        {/* Add more details as needed */}\n                    </div>\n                )}\n                {matchedImage && <img src=\"/assets/checkmark.png\" alt=\"Match Found\" className=\"checkmark\" />}\n            </div>\n        </div>\n    );\n};\n\nexport default RecognitionPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}